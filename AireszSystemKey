local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==1) then v47={v44,v45,nil,v46};v48=v35();v49={};v43=2;end if (v43==0) then v44={};v45={};v46={};v43=1;end if (v43==3) then for v101=1,v35() do v45[v101-1 ]=v40();end return v47;end if (v43==2) then for v103=1,v48 do local v104=0;local v105;local v106;while true do if (v104==0) then v105=v33();v106=nil;v104=1;end if (v104==1) then if (v105==1) then v106=v33()~=(927 -(214 + 713)) ;elseif (v105==2) then v106=v36();elseif (v105==3) then v106=v37();end v49[v103]=v106;break;end end end v47[1 + 2 ]=v33();for v107=1,v35() do local v108=0;local v109;while true do if (0==v108) then v109=v33();if (v32(v109,1,1 + 0 )==0) then local v119=v32(v109,2,3);local v120=v32(v109,4,6);local v121={v34(),v34(),nil,nil};if (v119==0) then v121[3]=v34();v121[4]=v34();elseif (v119==1) then v121[3]=v35();elseif (v119==2) then v121[3]=v35() -(2^16) ;elseif (v119==3) then v121[3]=v35() -((879 -(282 + 595))^16) ;v121[4]=v34();end if (v32(v120,1,1)==1) then v121[2]=v49[v121[2]];end if (v32(v120,2,2)==(1638 -(1523 + 114))) then v121[3]=v49[v121[3]];end if (v32(v120,3,3 + 0 )==1) then v121[4]=v49[v121[4]];end v44[v107]=v121;end break;end end end v43=3;end end end v29=5;end if (v29==5) then v41=nil;function v41(v50,v51,v52)local v53=v50[1 -0 ];local v54=v50[2];local v55=v50[3];return function(...)local v77=v53;local v78=v54;local v79=v55;local v80=v39;local v81=1;local v82= -1;local v83={};local v84={...};local v85=v20("#",...) -1 ;local v86={};local v87={};for v93=0,v85 do if (v93>=v79) then v83[v93-v79 ]=v84[v93 + 1 ];else v87[v93]=v84[v93 + 1 ];end end local v88=(v85-v79) + 1 ;local v89;local v90;while true do local v94=0;while true do if (v94==0) then v89=v77[v81];v90=v89[1];v94=1;end if (v94==1) then if (v90<=40) then if (v90<=19) then if (v90<=9) then if (v90<=4) then if (v90<=(1066 -(68 + 997))) then if (v90>0) then local v135=0;local v136;while true do if (0==v135) then v136=v89[2];v87[v136](v21(v87,v136 + (1271 -(226 + 1044)) ,v82));break;end end else v87[v89[2]]=v87[v89[3]][v87[v89[4]]];end elseif (v90<=2) then local v139=v89[2];v87[v139](v87[v139 + 1 ]);elseif (v90==3) then local v199=v78[v89[3]];local v200;local v201={};v200=v18({},{[v7("\18\154\67\210\68\135\53","\226\77\197\42\188\32")]=function(v286,v287)local v288=v201[v287];return v288[1][v288[2]];end,[v7("\5\41\250\176\45\31\250\177\63\14","\213\90\118\148")]=function(v289,v290,v291)local v292=v201[v290];v292[1][v292[2]]=v291;end});for v294=4 -3 ,v89[4] do v81=v81 + 1 ;local v295=v77[v81];if (v295[1]==35) then v201[v294-1 ]={v87,v295[3]};else v201[v294-1 ]={v51,v295[3]};end v86[ #v86 + 1 ]=v201;end v87[v89[119 -(32 + 85) ]]=v41(v199,v200,v52);else local v203=v89[2];local v204={};for v297=1, #v86 do local v298=0;local v299;while true do if (v298==0) then v299=v86[v297];for v375=0 + 0 , #v299 do local v376=0;local v377;local v378;local v379;while true do if (v376==0) then v377=v299[v375];v378=v377[1];v376=1;end if (v376==1) then v379=v377[2];if ((v378==v87) and (v379>=v203)) then local v409=0;while true do if (v409==0) then v204[v379]=v378[v379];v377[1]=v204;break;end end end break;end end end break;end end end end elseif (v90<=6) then if (v90==5) then local v140=v89[2];v87[v140]=v87[v140](v21(v87,v140 + 1 ,v82));else local v142=0;local v143;while true do if (v142==0) then v143=v89[2];do return v21(v87,v143,v82);end break;end end end elseif (v90<=7) then do return v87[v89[2]]();end elseif (v90==8) then v87[v89[2]]=v51[v89[3]];elseif (v87[v89[2]]==v87[v89[4]]) then v81=v81 + 1 + 0 ;else v81=v89[3];end elseif (v90<=(971 -(892 + 65))) then if (v90<=11) then if (v90>10) then if (v87[v89[2]]==v87[v89[4]]) then v81=v81 + (2 -1) ;else v81=v89[3];end elseif (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=12) then local v144=0;local v145;local v146;local v147;local v148;while true do if (v144==2) then for v334=v145,v82 do v148=v148 + 1 ;v87[v334]=v146[v148];end break;end if (v144==1) then v82=(v147 + v145) -1 ;v148=0;v144=2;end if (0==v144) then v145=v89[2];v146,v147=v80(v87[v145](v87[v145 + 1 ]));v144=1;end end elseif (v90==13) then if  not v87[v89[2]] then v81=v81 + (1 -0) ;else v81=v89[3];end else v87[v89[2]][v89[3]]=v89[4];end elseif (v90<=16) then if (v90>(27 -12)) then v87[v89[2]]=v89[3] + v87[v89[4]] ;else local v150=0;local v151;while true do if (v150==0) then v151=v89[2];v87[v151](v87[v151 + 1 ]);break;end end end elseif (v90<=(367 -(87 + 263))) then v87[v89[182 -(67 + 113) ]]= #v87[v89[3]];elseif (v90==18) then v87[v89[2]]=v52[v89[3]];else v87[v89[2 + 0 ]]=v89[3];end elseif (v90<=29) then if (v90<=24) then if (v90<=21) then if (v90>(49 -29)) then v87[v89[2]]=v52[v89[3]];else local v155=0;local v156;while true do if (v155==0) then v156=v89[2];do return v87[v156](v21(v87,v156 + 1 ,v89[3]));end break;end end end elseif (v90<=(17 + 5)) then v87[v89[2]]=v89[3] + v87[v89[4]] ;elseif (v90>23) then if v87[v89[2]] then v81=v81 + (3 -2) ;else v81=v89[3];end else v87[v89[2]]=v41(v78[v89[955 -(802 + 150) ]],nil,v52);end elseif (v90<=26) then if (v90>(67 -42)) then local v158=v89[2];v87[v158](v21(v87,v158 + 1 ,v89[3]));else do return;end end elseif (v90<=27) then v87[v89[2]]=v87[v89[3]][v89[4]];elseif (v90==28) then v87[v89[2]][v89[3]]=v89[4];else v87[v89[2]]();end elseif (v90<=34) then if (v90<=31) then if (v90==30) then v87[v89[3 -1 ]]= #v87[v89[3]];else for v195=v89[2],v89[3] do v87[v195]=nil;end end elseif (v90<=32) then for v197=v89[2],v89[3] do v87[v197]=nil;end elseif (v90==33) then v87[v89[2 + 0 ]][v89[3]]=v87[v89[4]];else local v220=0;local v221;local v222;while true do if (v220==0) then v221=v89[2];v222=v87[v221];v220=1;end if (1==v220) then for v361=v221 + 1 ,v82 do v15(v222,v87[v361]);end break;end end end elseif (v90<=37) then if (v90<=35) then v87[v89[2]]=v87[v89[3]];elseif (v90==36) then v87[v89[2]]=v87[v89[3]]%v87[v89[4]] ;else v87[v89[2]]=v87[v89[3]]%v87[v89[4]] ;end elseif (v90<=38) then v87[v89[2]]={};elseif (v90>39) then local v225=v89[2];local v226,v227=v80(v87[v225](v87[v225 + 1 ]));v82=(v227 + v225) -1 ;local v228=0;for v304=v225,v82 do local v305=0;while true do if (v305==0) then v228=v228 + (998 -(915 + 82)) ;v87[v304]=v226[v228];break;end end end else local v229=v78[v89[3]];local v230;local v231={};v230=v18({},{[v7("\100\17\189\88\73\94\54","\45\59\78\212\54")]=function(v306,v307)local v308=v231[v307];return v308[1][v308[2]];end,[v7("\47\105\141\142\145\39\163\244\21\78","\144\112\54\227\235\230\78\205")]=function(v309,v310,v311)local v312=0;local v313;while true do if (0==v312) then v313=v231[v310];v313[1][v313[2]]=v311;break;end end end});for v314=1,v89[11 -7 ] do v81=v81 + 1 ;local v315=v77[v81];if (v315[1]==35) then v231[v314-1 ]={v87,v315[3]};else v231[v314-1 ]={v51,v315[2 + 1 ]};end v86[ #v86 + 1 ]=v231;end v87[v89[2]]=v41(v229,v230,v52);end elseif (v90<=60) then if (v90<=50) then if (v90<=45) then if (v90<=42) then if (v90>41) then v81=v89[3];elseif (v89[2]==v87[v89[4 -0 ]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=43) then local v166=0;local v167;local v168;local v169;while true do if (v166==2) then if (v168>(0 -0)) then if (v169<=v87[v167 + 1 ]) then v81=v89[3];v87[v167 + 3 ]=v169;end elseif (v169>=v87[v167 + 1 ]) then v81=v89[3];v87[v167 + 3 ]=v169;end break;end if (v166==1) then v169=v87[v167] + v168 ;v87[v167]=v169;v166=2;end if (v166==0) then v167=v89[1189 -(1069 + 118) ];v168=v87[v167 + 2 ];v166=1;end end elseif (v90==44) then local v234=v89[2];local v235,v236=v80(v87[v234](v21(v87,v234 + 1 ,v82)));v82=(v236 + v234) -1 ;local v237=0;for v320=v234,v82 do local v321=0;while true do if (0==v321) then v237=v237 + (1 -0) ;v87[v320]=v235[v237];break;end end end else v87[v89[2]]=v87[v89[3]];end elseif (v90<=47) then if (v90>46) then if (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end else local v170=0;local v171;local v172;local v173;while true do if (v170==1) then v173=v87[v171 + 2 ];if (v173>0) then if (v172>v87[v171 + 1 + 0 ]) then v81=v89[4 -1 ];else v87[v171 + 3 ]=v172;end elseif (v172<v87[v171 + 1 ]) then v81=v89[3];else v87[v171 + 3 ]=v172;end break;end if (v170==0) then v171=v89[2];v172=v87[v171];v170=1;end end end elseif (v90<=48) then do return;end elseif (v90==49) then local v241=v89[2];v87[v241](v21(v87,v241 + 1 ,v89[3]));else v87[v89[2]]=v87[v89[3]][v89[4]];end elseif (v90<=55) then if (v90<=52) then if (v90>(51 + 0)) then v87[v89[2]]();else local v174=v89[2];v87[v174]=v87[v174](v21(v87,v174 + 1 ,v82));end elseif (v90<=53) then if (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90==54) then v87[v89[793 -(368 + 423) ]]={};else local v246=v89[2];local v247,v248=v80(v87[v246](v21(v87,v246 + 1 ,v89[3])));v82=(v248 + v246) -1 ;local v249=0 -0 ;for v325=v246,v82 do local v326=0;while true do if (v326==0) then v249=v249 + 1 ;v87[v325]=v247[v249];break;end end end end elseif (v90<=57) then if (v90>56) then local v176=0;local v177;local v178;local v179;local v180;while true do if (v176==2) then for v339=v177,v82 do local v340=0;while true do if (v340==0) then v180=v180 + (3 -2) ;v87[v339]=v178[v180];break;end end end break;end if (v176==1) then v82=(v179 + v177) -1 ;v180=0;v176=2;end if (v176==0) then v177=v89[2];v178,v179=v80(v87[v177](v21(v87,v177 + (19 -(10 + 8)) ,v82)));v176=1;end end else v87[v89[2]]=v87[v89[3]][v87[v89[4]]];end elseif (v90<=58) then local v183=0;local v184;while true do if (v183==0) then v184=v89[2];v87[v184]=v87[v184](v21(v87,v184 + (443 -(416 + 26)) ,v89[3]));break;end end elseif (v90==59) then local v250=v89[2];local v251=v87[v250];for v330=v250 + 1 ,v82 do v15(v251,v87[v330]);end else local v252=0;local v253;local v254;while true do if (v252==1) then for v370=1, #v86 do local v371=v86[v370];for v390=0, #v371 do local v391=0;local v392;local v393;local v394;while true do if (0==v391) then v392=v371[v390];v393=v392[1];v391=1;end if (v391==1) then v394=v392[2];if ((v393==v87) and (v394>=v253)) then v254[v394]=v393[v394];v392[3 -2 ]=v254;end break;end end end end break;end if (v252==0) then v253=v89[2];v254={};v252=1;end end end elseif (v90<=70) then if (v90<=65) then if (v90<=62) then if (v90==61) then if v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif  not v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=63) then v87[v89[1 + 1 ]]=v87[v89[3]]%v89[4] ;elseif (v90>64) then v87[v89[2]]=v87[v89[3]] + v89[4] ;else local v258=0;local v259;local v260;local v261;while true do if (v258==0) then v259=v89[3 -1 ];v260=v87[v259 + (440 -(145 + 293)) ];v258=1;end if (v258==1) then v261=v87[v259] + v260 ;v87[v259]=v261;v258=2;end if (v258==2) then if (v260>0) then if (v261<=v87[v259 + 1 ]) then v81=v89[3];v87[v259 + 3 ]=v261;end elseif (v261>=v87[v259 + 1 ]) then v81=v89[433 -(44 + 386) ];v87[v259 + 3 ]=v261;end break;end end end elseif (v90<=67) then if (v90>66) then v87[v89[2]]=v51[v89[3]];else do return v87[v89[2]]();end end elseif (v90<=(1554 -(998 + 488))) then v87[v89[2]]=v87[v89[1 + 2 ]]%v89[4 + 0 ] ;elseif (v90>69) then local v262=0;local v263;local v264;local v265;while true do if (v262==0) then v263=v89[2];v264=v87[v263];v262=1;end if (v262==1) then v265=v87[v263 + 2 ];if (v265>0) then if (v264>v87[v263 + 1 ]) then v81=v89[3];else v87[v263 + 3 ]=v264;end elseif (v264<v87[v263 + 1 ]) then v81=v89[3];else v87[v263 + (775 -(201 + 571)) ]=v264;end break;end end else v87[v89[1140 -(116 + 1022) ]]=v87[v89[3]] + v89[4] ;end elseif (v90<=(312 -237)) then if (v90<=72) then if (v90>71) then local v189=v89[2];v87[v189](v21(v87,v189 + 1 ,v82));else local v190=0;local v191;while true do if (v190==0) then v191=v89[2];v87[v191]=v87[v191](v21(v87,v191 + 1 ,v89[3]));break;end end end elseif (v90<=73) then local v192=v89[2];do return v21(v87,v192,v82);end elseif (v90>74) then local v267=v89[2];local v268=v87[v89[3]];v87[v267 + 1 ]=v268;v87[v267]=v268[v89[4]];else v87[v89[2]]=v89[3];end elseif (v90<=78) then if (v90<=76) then v87[v89[2]]=v41(v78[v89[3]],nil,v52);elseif (v90==77) then local v274=v89[2];do return v87[v274](v21(v87,v274 + 1 + 0 ,v89[3]));end else v87[v89[2]][v89[3]]=v87[v89[14 -10 ]];end elseif (v90<=79) then v81=v89[3];elseif (v90==80) then local v277=0;local v278;local v279;while true do if (1==v277) then v87[v278 + 1 ]=v279;v87[v278]=v279[v89[14 -10 ]];break;end if (v277==0) then v278=v89[2];v279=v87[v89[3]];v277=1;end end else local v280=0;local v281;local v282;local v283;local v284;while true do if (v280==1) then v82=(v283 + v281) -1 ;v284=0;v280=2;end if (v280==0) then v281=v89[2];v282,v283=v80(v87[v281](v21(v87,v281 + 1 ,v89[3])));v280=1;end if (2==v280) then for v372=v281,v82 do v284=v284 + 1 ;v87[v372]=v282[v284];end break;end end end v81=v81 + 1 ;break;end end end end;end return v41(v40(),{},v28)(...);end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\253\102","\59\211\72\111\156\176"),function(v56)if (v9(v56,2)==79) then local v95=0;while true do if (v95==0) then v31=v8(v11(v56,1,1));return "";end end else local v96=0;local v97;while true do if (0==v96) then v97=v10(v8(v56,16));if v31 then local v118=v13(v97,v31);v31=nil;return v118;else return v97;end break;end end end end);v32=nil;v29=1;end if (v29==3) then function v36()local v57=v35();local v58=v35();local v59=1;local v60=(v32(v58,1,20) * (2^32)) + v57 ;local v61=v32(v58,21,31);local v62=((v32(v58,32)==1) and  -1) or (620 -(555 + 64)) ;if (v61==0) then if (v60==(931 -(857 + 74))) then return v62 * 0 ;else local v114=0;while true do if (v114==0) then v61=1;v59=0;break;end end end elseif (v61==2047) then return ((v60==0) and (v62 * (1/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end v37=nil;function v37(v63)local v64;if  not v63 then v63=v35();if (v63==0) then return "";end end v64=v11(v27,v30,(v30 + v63) -1 );v30=v30 + v63 ;local v65={};for v91=1, #v64 do v65[v91]=v10(v9(v11(v64,v91,v91)));end return v14(v65);end v38=v35;v29=4;end if (v29==2) then function v34()local v66,v67=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v67 * (659 -403)) + v66 ;end v35=nil;function v35()local v68=0;local v69;local v70;local v71;local v72;while true do if (0==v68) then v69,v70,v71,v72=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v68=1;end if (v68==1) then return (v72 * 16777216) + (v71 * 65536) + (v70 * 256) + v69 ;end end end v36=nil;v29=3;end if (v29==1) then function v32(v73,v74,v75)if v75 then local v98=(v73/((5 -3)^(v74-1)))%(2^(((v75-1) -(v74-1)) + 1)) ;return v98-(v98%(2 -1)) ;else local v99=(3 -1)^(v74-1) ;return (((v73%(v99 + v99))>=v99) and 1) or 0 ;end end v33=nil;function v33()local v76=v9(v27,v30,v30);v30=v30 + 1 ;return v76;end v34=nil;v29=2;end end end vv17(),...);
